.. This file is generated by utils/mkUserGuidePart

+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| Flag                                               | Description                                                                                          | Static/Dynamic                 | Reverse                                            |
+====================================================+======================================================================================================+================================+====================================================+
| :ghc-flag:`-fconstraint-solver-iterations=⟨n⟩`     | *default: 4.* Set the iteration limit for the type-constraint solver. Typically one iteration        | dynamic                        |                                                    |
|                                                    | suffices; so please yell if you find you need to set it higher than the default. Zero means          |                                |                                                    |
|                                                    | infinity.                                                                                            |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-freduction-depth=⟨n⟩`                  | *default: 200.* Set the :ref:`limit for type simplification <undecidable-instances>`. Zero           | dynamic                        |                                                    |
|                                                    | means infinity.                                                                                      |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fcontext-stack=⟨n⟩`                    | Deprecated. Use ``-freduction-depth=⟨n⟩`` instead.                                                   | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fglasgow-exts`                         | Deprecated. Enable most language extensions; see :ref:`options-language` for exactly which           | dynamic                        | :ghc-flag:`-fno-glasgow-exts`                      |
|                                                    | ones.                                                                                                |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-firrefutable-tuples`                   | Make tuple pattern matching irrefutable                                                              | dynamic                        | :ghc-flag:`-fno-irrefutable-tuples`                |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fpackage-trust`                        | Enable :ref:`Safe Haskell <safe-haskell>` trusted package requirement for trustworthy modules.       | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-ftype-function-depth=⟨n⟩`              | Deprecated. Use ``-freduction-depth=⟨n⟩`` instead.                                                   | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XAllowAmbiguousTypes`                  | Allow the user to write :ref:`ambiguous types <ambiguity>`, and the type inference engine to         | dynamic                        | :ghc-flag:`-XNoAllowAmbiguousTypes`                |
|                                                    | infer them.                                                                                          |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XArrows`                               | Enable :ref:`arrow notation <arrow-notation>` extension                                              | dynamic                        | :ghc-flag:`-XNoArrows`                             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XApplicativeDo`                        | Enable :ref:`Applicative do-notation desugaring <applicative-do>`                                    | dynamic                        | :ghc-flag:`-XNoApplicativeDo`                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XAutoDeriveTypeable`                   | As of GHC 7.10, this option is not needed, and should not be used. Previously this would             | dynamic                        | :ghc-flag:`-XNoAutoDeriveTypeable`                 |
|                                                    | automatically :ref:`derive Typeable instances for every datatype and type class declaration          |                                |                                                    |
|                                                    | <deriving-typeable>`. Implies :ghc-flag:`-XDeriveDataTypeable`.                                      |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XBangPatterns`                         | Enable :ref:`bang patterns <bang-patterns>`.                                                         | dynamic                        | :ghc-flag:`-XNoBangPatterns`                       |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XBinaryLiterals`                       | Enable support for :ref:`binary literals <binary-literals>`.                                         | dynamic                        | :ghc-flag:`-XNoBinaryLiterals`                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XCApiFFI`                              | Enable :ref:`the CAPI calling convention <ffi-capi>`.                                                | dynamic                        | :ghc-flag:`-XNoCAPIFFI`                            |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XConstrainedClassMethods`              | Enable :ref:`constrained class methods <class-method-types>`.                                        | dynamic                        | :ghc-flag:`-XNoConstrainedClassMethods`            |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XConstraintKinds`                      | Enable a :ref:`kind of constraints <constraint-kind>`.                                               | dynamic                        | :ghc-flag:`-XNoConstraintKinds`                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XCPP`                                  | Enable the :ref:`C preprocessor <c-pre-processor>`.                                                  | dynamic                        | :ghc-flag:`-XNoCPP`                                |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XDataKinds`                            | Enable :ref:`datatype promotion <promotion>`.                                                        | dynamic                        | :ghc-flag:`-XNoDataKinds`                          |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XDefaultSignatures`                    | Enable :ref:`default signatures <class-default-signatures>`.                                         | dynamic                        | :ghc-flag:`-XNoDefaultSignatures`                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XDeriveAnyClass`                       | Enable :ref:`deriving for any class <derive-any-class>`.                                             | dynamic                        | :ghc-flag:`-XNoDeriveAnyClass`                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XDeriveDataTypeable`                   | Enable ``deriving`` for the :ref:`Data class <deriving-typeable>`. Implied by                        | dynamic                        | :ghc-flag:`-XNoDeriveDataTypeable`                 |
|                                                    | :ghc-flag:`-XAutoDeriveTypeable`.                                                                    |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XDeriveFunctor`                        | Enable :ref:`deriving for the Functor class <deriving-extra>`. Implied by                            | dynamic                        | :ghc-flag:`-XNoDeriveFunctor`                      |
|                                                    | :ghc-flag:`-XDeriveTraversable`.                                                                     |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XDeriveFoldable`                       | Enable :ref:`deriving for the Foldable class <deriving-extra>`. Implied by                           | dynamic                        | :ghc-flag:`-XNoDeriveFoldable`                     |
|                                                    | :ghc-flag:`-XDeriveTraversable`.                                                                     |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XDeriveGeneric`                        | Enable :ref:`deriving for the Generic class <deriving-typeable>`.                                    | dynamic                        | :ghc-flag:`-XNoDeriveGeneric`                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XDeriveGeneric`                        | Enable :ref:`deriving for the Generic class <deriving-typeable>`.                                    | dynamic                        | :ghc-flag:`-XNoDeriveGeneric`                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XDeriveLift`                           | Enable :ref:`deriving for the Lift class <deriving-lift>`                                            | dynamic                        | :ghc-flag:`-XNoDeriveLift`                         |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XDeriveTraversable`                    | Enable :ref:`deriving for the Traversable class <deriving-extra>`. Implies                           | dynamic                        | :ghc-flag:`-XNoDeriveTraversable`                  |
|                                                    | :ghc-flag:`-XDeriveFunctor` and :ghc-flag:`-XDeriveFoldable`.                                        |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XDisambiguateRecordFields`             | Enable :ref:`record field disambiguation <disambiguate-fields>`. Implied by                          | dynamic                        | :ghc-flag:`-XNoDisambiguateRecordFields`           |
|                                                    | :ghc-flag:`-XRecordWildCards`.                                                                       |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XEmptyCase`                            | Allow :ref:`empty case alternatives <empty-case>`.                                                   | dynamic                        | :ghc-flag:`-XNoEmptyCase`                          |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XEmptyDataDecls`                       | Enable empty data declarations.                                                                      | dynamic                        | :ghc-flag:`-XNoEmptyDataDecls`                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XExistentialQuantification`            | Enable :ref:`existential quantification <existential-quantification>`.                               | dynamic                        | :ghc-flag:`-XNoExistentialQuantification`          |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XExplicitForAll`                       | Enable :ref:`explicit universal quantification <explicit-foralls>`. Implied by                       | dynamic                        | :ghc-flag:`-XNoExplicitForAll`                     |
|                                                    | :ghc-flag:`-XScopedTypeVariables`, :ghc-flag:`-XLiberalTypeSynonyms`, :ghc-flag:`-XRankNTypes`       |                                |                                                    |
|                                                    | and :ghc-flag:`-XExistentialQuantification`.                                                         |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XExplicitNamespaces`                   | Enable using the keyword ``type`` to specify the namespace of entries in imports and exports         | dynamic                        | :ghc-flag:`-XNoExplicitNamespaces`                 |
|                                                    | (:ref:`explicit-namespaces`). Implied by :ghc-flag:`-XTypeOperators` and                             |                                |                                                    |
|                                                    | :ghc-flag:`-XTypeFamilies`.                                                                          |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XExtendedDefaultRules`                 | Use GHCi's :ref:`extended default rules <extended-default-rules>` in a normal module.                | dynamic                        | :ghc-flag:`-XNoExtendedDefaultRules`               |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XFlexibleContexts`                     | Enable :ref:`flexible contexts <flexible-contexts>`. Implied by :ghc-flag:`-XImplicitParams`.        | dynamic                        | :ghc-flag:`-XNoFlexibleContexts`                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XFlexibleInstances`                    | Enable :ref:`flexible instances <instance-rules>`. Implies :ghc-flag:`-XTypeSynonymInstances`.       | dynamic                        | :ghc-flag:`-XNoFlexibleInstances`                  |
|                                                    | Implied by :ghc-flag:`-XImplicitParams`.                                                             |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XForeignFunctionInterface`             | Enable :ref:`foreign function interface <ffi>`.                                                      | dynamic                        | :ghc-flag:`-XNoForeignFunctionInterface`           |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XFunctionalDependencies`               | Enable :ref:`functional dependencies <functional-dependencies>`. Implies                             | dynamic                        | :ghc-flag:`-XNoFunctionalDependencies`             |
|                                                    | :ghc-flag:`-XMultiParamTypeClasses`.                                                                 |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XGADTs`                                | Enable :ref:`generalised algebraic data types <gadt>`. Implies :ghc-flag:`-XGADTSyntax` and          | dynamic                        | :ghc-flag:`-XNoGADTs`                              |
|                                                    | :ghc-flag:`-XMonoLocalBinds`.                                                                        |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XGADTSyntax`                           | Enable :ref:`generalised algebraic data type syntax <gadt-style>`.                                   | dynamic                        | :ghc-flag:`-XNoGADTSyntax`                         |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XGeneralizedNewtypeDeriving`           | Enable :ref:`newtype deriving <newtype-deriving>`.                                                   | dynamic                        | :ghc-flag:`-XNoGeneralizedNewtypeDeriving`         |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XGenerics`                             | Deprecated, does nothing. No longer enables :ref:`generic classes <generic-classes>`. See also       | dynamic                        | :ghc-flag:`-XNoGenerics`                           |
|                                                    | GHC's support for :ref:`generic programming <generic-programming>`.                                  |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XImplicitParams`                       | Enable :ref:`Implicit Parameters <implicit-parameters>`. Implies :ghc-flag:`-XFlexibleContexts`      | dynamic                        | :ghc-flag:`-XNoImplicitParams`                     |
|                                                    | and :ghc-flag:`-XFlexibleInstances`.                                                                 |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XNoImplicitPrelude`                    | Don't implicitly ``import Prelude``. Implied by :ghc-flag:`-XRebindableSyntax`.                      | dynamic                        | :ghc-flag:`-XImplicitPrelude`                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XImpredicativeTypes`                   | Enable :ref:`impredicative types <impredicative-polymorphism>`. Implies                              | dynamic                        | :ghc-flag:`-XNoImpredicativeTypes`                 |
|                                                    | :ghc-flag:`-XRankNTypes`.                                                                            |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XIncoherentInstances`                  | Enable :ref:`incoherent instances <instance-overlap>`. Implies                                       | dynamic                        | :ghc-flag:`-XNoIncoherentInstances`                |
|                                                    | :ghc-flag:`-XOverlappingInstances`.                                                                  |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XTypeFamilyDependencies`               | Enable :ref:`injective type families <injective-ty-fams>`. Implies :ghc-flag:`-XTypeFamilies`.       | dynamic                        | :ghc-flag:`-XNoTypeFamilyDependencies`             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XInstanceSigs`                         | Enable :ref:`instance signatures <instance-sigs>`.                                                   | dynamic                        | :ghc-flag:`-XNoInstanceSigs`                       |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XInterruptibleFFI`                     | Enable interruptible FFI.                                                                            | dynamic                        | :ghc-flag:`-XNoInterruptibleFFI`                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XKindSignatures`                       | Enable :ref:`kind signatures <kinding>`. Implied by :ghc-flag:`-XTypeFamilies` and                   | dynamic                        | :ghc-flag:`-XNoKindSignatures`                     |
|                                                    | :ghc-flag:`-XPolyKinds`.                                                                             |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XLambdaCase`                           | Enable :ref:`lambda-case expressions <lambda-case>`.                                                 | dynamic                        | :ghc-flag:`-XNoLambdaCase`                         |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XLiberalTypeSynonyms`                  | Enable :ref:`liberalised type synonyms <type-synonyms>`.                                             | dynamic                        | :ghc-flag:`-XNoLiberalTypeSynonyms`                |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XMagicHash`                            | Allow ``#`` as a :ref:`postfix modifier on identifiers <magic-hash>`.                                | dynamic                        | :ghc-flag:`-XNoMagicHash`                          |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XMonadComprehensions`                  | Enable :ref:`monad comprehensions <monad-comprehensions>`.                                           | dynamic                        | :ghc-flag:`-XNoMonadComprehensions`                |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XMonoLocalBinds`                       | Enable :ref:`do not generalise local bindings <mono-local-binds>`. Implied by                        | dynamic                        | :ghc-flag:`-XNoMonoLocalBinds`                     |
|                                                    | :ghc-flag:`-XTypeFamilies` and :ghc-flag:`-XGADTs`.                                                  |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XNoMonomorphismRestriction`            | Disable the :ref:`monomorphism restriction <monomorphism>`.                                          | dynamic                        | :ghc-flag:`-XMonomorphismRestriction`              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XMultiParamTypeClasses`                | Enable :ref:`multi parameter type classes <multi-param-type-classes>`. Implied by                    | dynamic                        | :ghc-flag:`-XNoMultiParamTypeClasses`              |
|                                                    | :ghc-flag:`-XFunctionalDependencies`.                                                                |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XMultiWayIf`                           | Enable :ref:`multi-way if-expressions <multi-way-if>`.                                               | dynamic                        | :ghc-flag:`-XNoMultiWayIf`                         |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XNamedFieldPuns`                       | Enable :ref:`record puns <record-puns>`.                                                             | dynamic                        | :ghc-flag:`-XNoNamedFieldPuns`                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XNamedWildCards`                       | Enable :ref:`named wildcards <named-wildcards>`.                                                     | dynamic                        | :ghc-flag:`-XNoNamedWildCards`                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XNegativeLiterals`                     | Enable support for :ref:`negative literals <negative-literals>`.                                     | dynamic                        | :ghc-flag:`-XNoNegativeLiterals`                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XNoNPlusKPatterns`                     | Disable support for ``n+k`` patterns.                                                                | dynamic                        | :ghc-flag:`-XNPlusKPatterns`                       |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XNullaryTypeClasses`                   | Deprecated, does nothing. :ref:`nullary (no parameter) type classes <nullary-type-classes>` are      | dynamic                        | :ghc-flag:`-XNoNullaryTypeClasses`                 |
|                                                    | now enabled using :ghc-flag:`-XMultiParamTypeClasses`.                                               |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XNumDecimals`                          | Enable support for 'fractional' integer literals.                                                    | dynamic                        | :ghc-flag:`-XNoNumDecimals`                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XOverlappingInstances`                 | Enable :ref:`overlapping instances <instance-overlap>`.                                              | dynamic                        | :ghc-flag:`-XNoOverlappingInstances`               |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XOverloadedLists`                      | Enable :ref:`overloaded lists <overloaded-lists>`.                                                   | dynamic                        | :ghc-flag:`-XNoOverloadedLists`                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XOverloadedStrings`                    | Enable :ref:`overloaded string literals <overloaded-strings>`.                                       | dynamic                        | :ghc-flag:`-XNoOverloadedStrings`                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XPackageImports`                       | Enable :ref:`package-qualified imports <package-imports>`.                                           | dynamic                        | :ghc-flag:`-XNoPackageImports`                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XParallelArrays`                       | Enable parallel arrays. Implies :ghc-flag:`-XParallelListComp`.                                      | dynamic                        | :ghc-flag:`-XNoParallelArrays`                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XParallelListComp`                     | Enable :ref:`parallel list comprehensions <parallel-list-comprehensions>`. Implied by                | dynamic                        | :ghc-flag:`-XNoParallelListComp`                   |
|                                                    | :ghc-flag:`-XParallelArrays`.                                                                        |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XPartialTypeSignatures`                | Enable :ref:`partial type signatures <partial-type-signatures>`.                                     | dynamic                        | :ghc-flag:`-XNoPartialTypeSignatures`              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XPatternGuards`                        | Enable :ref:`pattern guards <pattern-guards>`.                                                       | dynamic                        | :ghc-flag:`-XNoPatternGuards`                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XPatternSynonyms`                      | Enable :ref:`pattern synonyms <pattern-synonyms>`.                                                   | dynamic                        | :ghc-flag:`-XNoPatternSynonyms`                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XPolyKinds`                            | Enable :ref:`kind polymorphism <kind-polymorphism>`. Implies :ghc-flag:`-XKindSignatures`.           | dynamic                        | :ghc-flag:`-XNoPolyKinds`                          |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XPolymorphicComponents`                | Enable :ref:`polymorphic components for data constructors <universal-quantification>`. Synonym       | dynamic                        | :ghc-flag:`-XNoPolymorphicComponents`              |
|                                                    | for :ghc-flag:`-XRankNTypes`.                                                                        |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XPostfixOperators`                     | Enable :ref:`postfix operators <postfix-operators>`.                                                 | dynamic                        | :ghc-flag:`-XNoPostfixOperators`                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XQuasiQuotes`                          | Enable :ref:`quasiquotation <th-quasiquotation>`.                                                    | dynamic                        | :ghc-flag:`-XNoQuasiQuotes`                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XRank2Types`                           | Enable :ref:`rank-2 types <universal-quantification>`. Synonym for :ghc-flag:`-XRankNTypes`.         | dynamic                        | :ghc-flag:`-XNoRank2Types`                         |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XRankNTypes`                           | Enable :ref:`rank-N types <universal-quantification>`. Implied by                                    | dynamic                        | :ghc-flag:`-XNoRankNTypes`                         |
|                                                    | :ghc-flag:`-XImpredicativeTypes`.                                                                    |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XRebindableSyntax`                     | Employ :ref:`rebindable syntax <rebindable-syntax>`. Implies :ghc-flag:`-XNoImplicitPrelude`.        | dynamic                        | :ghc-flag:`-XNoRebindableSyntax`                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XRecordWildCards`                      | Enable :ref:`record wildcards <record-wildcards>`. Implies                                           | dynamic                        | :ghc-flag:`-XNoRecordWildCards`                    |
|                                                    | :ghc-flag:`-XDisambiguateRecordFields`.                                                              |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XRecursiveDo`                          | Enable :ref:`recursive do (mdo) notation <recursive-do-notation>`.                                   | dynamic                        | :ghc-flag:`-XNoRecursiveDo`                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XRoleAnnotations`                      | Enable :ref:`role annotations <role-annotations>`.                                                   | dynamic                        | :ghc-flag:`-XNoRoleAnnotations`                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XSafe`                                 | Enable the :ref:`Safe Haskell <safe-haskell>` Safe mode.                                             | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XScopedTypeVariables`                  | Enable :ref:`lexically-scoped type variables <scoped-type-variables>`.                               | dynamic                        | :ghc-flag:`-XNoScopedTypeVariables`                |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XStandaloneDeriving`                   | Enable :ref:`standalone deriving <stand-alone-deriving>`.                                            | dynamic                        | :ghc-flag:`-XNoStandaloneDeriving`                 |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XStrictData`                           | Enable :ref:`default strict datatype fields <strict-data>`.                                          | dynamic                        | :ghc-flag:`-XNoStrictData`                         |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XTemplateHaskell`                      | Enable :ref:`Template Haskell <template-haskell>`.                                                   | dynamic                        | :ghc-flag:`-XNoTemplateHaskell`                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XTemplateHaskellQuotes`                | Enable quotation subset of :ref:`Template Haskell <template-haskell>`.                               | dynamic                        | :ghc-flag:`-XNoTemplateHaskellQuotes`              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XNoTraditionalRecordSyntax`            | Disable support for traditional record syntax (as supported by Haskell 98) ``C {f = x}``             | dynamic                        | :ghc-flag:`-XTraditionalRecordSyntax`              |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XTransformListComp`                    | Enable :ref:`generalised list comprehensions <generalised-list-comprehensions>`.                     | dynamic                        | :ghc-flag:`-XNoTransformListComp`                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XTrustworthy`                          | Enable the :ref:`Safe Haskell <safe-haskell>` Trustworthy mode.                                      | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XTupleSections`                        | Enable :ref:`tuple sections <tuple-sections>`.                                                       | dynamic                        | :ghc-flag:`-XNoTupleSections`                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XTypeFamilies`                         | Enable :ref:`type families <type-families>`. Implies :ghc-flag:`-XExplicitNamespaces`,               | dynamic                        | :ghc-flag:`-XNoTypeFamilies`                       |
|                                                    | :ghc-flag:`-XKindSignatures`, and :ghc-flag:`-XMonoLocalBinds`.                                      |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XTypeOperators`                        | Enable :ref:`type operators <type-operators>`. Implies :ghc-flag:`-XExplicitNamespaces`.             | dynamic                        | :ghc-flag:`-XNoTypeOperators`                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XTypeSynonymInstances`                 | Enable :ref:`type synonyms in instance heads <flexible-instance-head>`. Implied by                   | dynamic                        | :ghc-flag:`-XNoTypeSynonymInstances`               |
|                                                    | :ghc-flag:`-XFlexibleInstances`.                                                                     |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XUnboxedTuples`                        | Enable :ref:`unboxed tuples <unboxed-tuples>`.                                                       | dynamic                        | :ghc-flag:`-XNoUnboxedTuples`                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XUndecidableInstances`                 | Enable :ref:`undecidable instances <undecidable-instances>`.                                         | dynamic                        | :ghc-flag:`-XNoUndecidableInstances`               |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XUnicodeSyntax`                        | Enable :ref:`unicode syntax <unicode-syntax>`.                                                       | dynamic                        | :ghc-flag:`-XNoUnicodeSyntax`                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XUnliftedFFITypes`                     | Enable unlifted FFI types.                                                                           | dynamic                        | :ghc-flag:`-XNoUnliftedFFITypes`                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XUnsafe`                               | Enable :ref:`Safe Haskell <safe-haskell>` Unsafe mode.                                               | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-XViewPatterns`                         | Enable :ref:`view patterns <view-patterns>`.                                                         | dynamic                        | :ghc-flag:`-XNoViewPatterns`                       |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+

