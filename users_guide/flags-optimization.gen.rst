.. This file is generated by utils/mkUserGuidePart

+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| Flag                                               | Description                                                                                          | Static/Dynamic                 | Reverse                                            |
+====================================================+======================================================================================================+================================+====================================================+
| :ghc-flag:`-fcall-arity`                           | Enable call-arity optimisation. Implied by :ghc-flag:`-O`.                                           | dynamic                        | :ghc-flag:`-fno-call-arity`                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fcase-merge`                           | Enable case-merging. Implied by :ghc-flag:`-O`.                                                      | dynamic                        | :ghc-flag:`-fno-case-merge`                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fcmm-elim-common-blocks`               | Enable Cmm common block elimination. Implied by :ghc-flag:`-O`.                                      | dynamic                        | :ghc-flag:`-fno-cmm-elim-common-blocks`            |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fcmm-sink`                             | Enable Cmm sinking. Implied by :ghc-flag:`-O`.                                                       | dynamic                        | :ghc-flag:`-fno-cmm-sink`                          |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fcpr-anal`                             | Turn on CPR analysis in the demand analyser. Implied by :ghc-flag:`-O`.                              | dynamic                        | :ghc-flag:`-fno-cpr-anal`                          |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fcse`                                  | Enable common sub-expression elimination. Implied by :ghc-flag:`-O`.                                 | dynamic                        | :ghc-flag:`-fno-cse`                               |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fdicts-cheap`                          | Make dictionary-valued expressions seem cheap to the optimiser.                                      | dynamic                        | :ghc-flag:`-fno-dicts-cheap`                       |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fdicts-strict`                         | Make dictionaries strict                                                                             | dynamic                        | :ghc-flag:`-fno-dicts-strict`                      |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fdmd-tx-dict-sel`                      | Use a special demand transformer for dictionary selectors. Always enabled by default.                | dynamic                        | :ghc-flag:`-fno-dmd-tx-dict-sel`                   |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fdo-eta-reduction`                     | Enable eta-reduction. Implied by :ghc-flag:`-O`.                                                     | dynamic                        | :ghc-flag:`-fno-do-eta-reduction`                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fdo-lambda-eta-expansion`              | Enable lambda eta-expansion. Always enabled by default.                                              | dynamic                        | :ghc-flag:`-fno-do-lambda-eta-expansion`           |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-feager-blackholing`                    | Turn on :ref:`eager blackholing <parallel-compile-options>`                                          | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fenable-rewrite-rules`                 | Switch on all rewrite rules (including rules generated by automatic specialisation of                | dynamic                        | :ghc-flag:`-fno-enable-rewrite-rules`              |
|                                                    | overloaded functions). Implied by :ghc-flag:`-O`.                                                    |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fexcess-precision`                     | Enable excess intermediate precision                                                                 | dynamic                        | :ghc-flag:`-fno-excess-precision`                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fexpose-all-unfoldings`                | Expose all unfoldings, even for very large or recursive functions.                                   | dynamic                        | :ghc-flag:`-fno-expose-all-unfoldings`             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-ffloat-in`                             | Turn on the float-in transformation. Implied by :ghc-flag:`-O`.                                      | dynamic                        | :ghc-flag:`-fno-float-in`                          |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-ffull-laziness`                        | Turn on full laziness (floating bindings outwards). Implied by :ghc-flag:`-O`.                       | dynamic                        | :ghc-flag:`-fno-full-laziness`                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-ffun-to-thunk`                         | Allow worker-wrapper to convert a function closure into a thunk if the function does not use         | dynamic                        | :ghc-flag:`-fno-fun-to-thunk`                      |
|                                                    | any of its arguments. Off by default.                                                                |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fignore-asserts`                       | Ignore assertions in the source. Implied by :ghc-flag:`-O`.                                          | dynamic                        | :ghc-flag:`-fno-ignore-asserts`                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fignore-interface-pragmas`             | Ignore pragmas in interface files. Implied by :ghc-flag:`-O0` only.                                  | dynamic                        | :ghc-flag:`-fno-ignore-interface-pragmas`          |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-flate-dmd-anal`                        | Run demand analysis again, at the end of the simplification pipeline                                 | dynamic                        | :ghc-flag:`-fno-late-dmd-anal`                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fliberate-case`                        | Turn on the liberate-case transformation. Implied by :ghc-flag:`-O2`.                                | dynamic                        | :ghc-flag:`-fno-liberate-case`                     |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fliberate-case-threshold=⟨n⟩`          | *default: 2000.* Set the size threshold for the liberate-case transformation to ⟨n⟩                  | dynamic                        | :ghc-flag:`-fno-liberate-case-threshold`           |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-floopification`                        | Turn saturated self-recursive tail-calls into local jumps in the generated assembly. Implied by      | dynamic                        | :ghc-flag:`-fno-loopification`                     |
|                                                    | :ghc-flag:`-O`.                                                                                      |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fmax-inline-alloc-size=⟨n⟩`            | *default: 128.* Set the maximum size of inline array allocations to ⟨n⟩ bytes (default: 128).        | dynamic                        |                                                    |
|                                                    | GHC will allocate non-pinned arrays of statically known size in the current nursery block if         |                                |                                                    |
|                                                    | they're no bigger than ⟨n⟩ bytes, ignoring GC overheap. This value should be quite a bit             |                                |                                                    |
|                                                    | smaller than the block size (typically: 4096).                                                       |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fmax-inline-memcpy-insns=⟨n⟩`          | *default: 32.* Inline ``memcpy`` calls if they would generate no more than ⟨n⟩ pseudo                | dynamic                        |                                                    |
|                                                    | instructions.                                                                                        |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fmax-inline-memset-insns=⟨n⟩`          | *default: 32.* Inline ``memset`` calls if they would generate no more than ⟨n⟩ pseudo                | dynamic                        |                                                    |
|                                                    | instructions                                                                                         |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fmax-relevant-binds=⟨n⟩`               | *default: 6.* Set the maximum number of bindings to display in type error messages.                  | dynamic                        | :ghc-flag:`-fno-max-relevant-bindings`             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fmax-simplifier-iterations=⟨n⟩`        | *default: 4.* Set the max iterations for the simplifier.                                             | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fmax-worker-args=⟨n⟩`                  | *default: 10.* If a worker has that many arguments, none will be unpacked anymore.                   | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fno-opt-coercion`                      | Turn off the coercion optimiser                                                                      | static                         |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fno-pre-inlining`                      | Turn off pre-inlining                                                                                | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fno-state-hack`                        | Turn off the "state hack" whereby any lambda with a real-world state token as argument is            | static                         |                                                    |
|                                                    | considered to be single-entry. Hence OK to inline things inside it.                                  |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fomit-interface-pragmas`               | Don't generate interface pragmas. Implied by :ghc-flag:`-O0` only.                                   | dynamic                        | :ghc-flag:`-fno-omit-interface-pragmas`            |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fomit-yields`                          | Omit heap checks when no allocation is being performed.                                              | dynamic                        | :ghc-flag:`-fno-omit-yields`                       |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-foptimal-applicative-do`               | Use a slower but better algorithm for ApplicativeDo                                                  | dynamic                        | :ghc-flag:`-fno-optimal-applicative-do`            |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fpedantic-bottoms`                     | Make GHC be more precise about its treatment of bottom (but see also                                 | dynamic                        | :ghc-flag:`-fno-pedantic-bottoms`                  |
|                                                    | :ghc-flag:`-fno-state-hack`). In particular, GHC will not eta-expand through a case expression.      |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fregs-graph`                           | Use the graph colouring register allocator for register allocation in the native code                | dynamic                        | :ghc-flag:`-fno-regs-graph`                        |
|                                                    | generator. Implied by :ghc-flag:`-O2`.                                                               |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fregs-iterative`                       | Use the iterative coalescing graph colouring register allocator in the native code generator.        | dynamic                        | :ghc-flag:`-fno-regs-iterative`                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fsimplifier-phases=⟨n⟩`                | *default: 2.* Set the number of phases for the simplifier. Ignored with :ghc-flag:`-O0`.             | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fsimpl-tick-factor=⟨n⟩`                | *default: 100.* Set the percentage factor for simplifier ticks.                                      | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fspec-constr`                          | Turn on the SpecConstr transformation. Implied by :ghc-flag:`-O2`.                                   | dynamic                        | :ghc-flag:`-fno-spec-constr`                       |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fspec-constr-count=⟨n⟩`                | default: 3.* Set to ⟨n⟩ the maximum number of specialisations that will be created for any one       | dynamic                        | :ghc-flag:`-fno-spec-constr-count`                 |
|                                                    | function by the SpecConstr transformation.                                                           |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fspec-constr-threshold=⟨n⟩`            | *default: 2000.* Set the size threshold for the SpecConstr transformation to ⟨n⟩.                    | dynamic                        | :ghc-flag:`-fno-spec-constr-threshold`             |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fspecialise`                           | Turn on specialisation of overloaded functions. Implied by :ghc-flag:`-O`.                           | dynamic                        | :ghc-flag:`-fno-specialise`                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fcross-module-specialise`              | Turn on specialisation of overloaded functions imported from other modules.                          | dynamic                        | :ghc-flag:`-fno-cross-module-specialise`           |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fstatic-argument-transformation`       | Turn on the static argument transformation.                                                          | dynamic                        | :ghc-flag:`-fno-static-argument-transformation     |
|                                                    |                                                                                                      |                                | `                                                  |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fstrictness`                           | Turn on strictness analysis. Implied by :ghc-flag:`-O`. Implies :ghc-flag:`-fworker-wrapper`         | dynamic                        | :ghc-flag:`-fno-strictness`                        |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fstrictness-before=⟨n⟩`                | Run an additional strictness analysis before simplifier phase ⟨n⟩                                    | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-funbox-small-strict-fields`            | Flatten strict constructor fields with a pointer-sized representation. Implied by                    | dynamic                        | :ghc-flag:`-fno-unbox-small-strict-fields`         |
|                                                    | :ghc-flag:`-O`.                                                                                      |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-funbox-strict-fields`                  | Flatten strict constructor fields                                                                    | dynamic                        | :ghc-flag:`-fno-unbox-strict-fields`               |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-funfolding-creation-threshold=⟨n⟩`     | *default: 750.* Tweak unfolding settings.                                                            | dynamic                        |                                                    |
|                                                    |                                                                                                      |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-funfolding-dict-discount=⟨n⟩`          | *default: 30.* Tweak unfolding settings.                                                             | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-funfolding-fun-discount=⟨n⟩`           | *default: 60.* Tweak unfolding settings.                                                             | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-funfolding-keeness-factor=⟨n⟩`         | *default: 1.5.* Tweak unfolding settings.                                                            | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-funfolding-use-threshold=⟨n⟩`          | *default: 60.* Tweak unfolding settings.                                                             | dynamic                        |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fvectorisation-avoidance`              | Enable vectorisation avoidance. Always enabled by default.                                           | dynamic                        | :ghc-flag:`-fno-vectorisation-avoidance`           |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fvectorise`                            | Enable vectorisation of nested data parallelism                                                      | dynamic                        | :ghc-flag:`-fno-vectorise`                         |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+
| :ghc-flag:`-fworker-wrapper`                       | Enable the worker-wrapper transformation after a strictness analysis pass. Implied by                | dynamic                        | :ghc-flag:`-fno-worker-wrapper`                    |
|                                                    | :ghc-flag:`-O`, and by :ghc-flag:`-fstrictness`. Disabled by :ghc-flag:`-fno-strictness`.            |                                |                                                    |
|                                                    | Enabling :ghc-flag:`-fworker-wrapper` while strictness analysis is disabled (by                      |                                |                                                    |
|                                                    | :ghc-flag:`-fno-strictness`) has no effect.                                                          |                                |                                                    |
+----------------------------------------------------+------------------------------------------------------------------------------------------------------+--------------------------------+----------------------------------------------------+

